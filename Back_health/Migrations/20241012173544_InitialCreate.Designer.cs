// <auto-generated />
using System;
using Back_health.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back_health.Migrations
{
    [DbContext(typeof(HealtPlusContext))]
    [Migration("20241012173544_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Back_health.Models.Alertum", b =>
                {
                    b.Property<int>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAlerta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlerta"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.HasKey("IdAlerta")
                        .HasName("PK__alerta__D099542711105225");

                    b.ToTable("alerta", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDoctor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("Cedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cedula");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("NumDoctor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_doctor");

                    b.HasKey("IdDoctor")
                        .HasName("PK__doctor__418956C34DEE8F98");

                    b.HasIndex("IdUsuario");

                    b.ToTable("doctor", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Enfermero", b =>
                {
                    b.Property<int>("IdEnfermero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnfermero"));

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("NumEnfermero")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_enfermero");

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titulo");

                    b.HasKey("IdEnfermero")
                        .HasName("PK__enfermer__A823C61843AE720E");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUsuario");

                    b.ToTable("enfermero", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.EnfermeroTurno", b =>
                {
                    b.Property<int>("IdEnfermeroTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero_turno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnfermeroTurno"));

                    b.Property<int>("IdEnfermero")
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    b.HasKey("IdEnfermeroTurno")
                        .HasName("PK__enfermer__FDBDD7AC042D8A29");

                    b.HasIndex("IdEnfermero");

                    b.HasIndex("IdTurno");

                    b.ToTable("enfermero_turno", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.HistorialTurno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<int>("IdEnfermero")
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<string>("Turno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("turno");

                    b.HasKey("IdTurno")
                        .HasName("PK__historia__AA068B012147D026");

                    b.HasIndex("IdEnfermero");

                    b.HasIndex("IdPaciente");

                    b.ToTable("historial_turno", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.MonitoreoSalud", b =>
                {
                    b.Property<int>("IdMonitoreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMonitoreo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonitoreo"));

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<int>("IdPadecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdMonitoreo")
                        .HasName("PK__monitore__69E8E0BFD48DF962");

                    b.HasIndex("IdPadecimiento");

                    b.ToTable("monitoreo_salud", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<string>("Altura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("altura");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int?>("IdAlerta")
                        .HasColumnType("int")
                        .HasColumnName("idAlerta");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<int?>("IdRecordatorio")
                        .HasColumnType("int")
                        .HasColumnName("idRecordatorio");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("NumPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_paciente");

                    b.Property<string>("Peso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("peso");

                    b.Property<string>("TipoSangre")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipo_sangre");

                    b.HasKey("IdPaciente")
                        .HasName("PK__paciente__F48A08F280942C64");

                    b.HasIndex("IdAlerta");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdRecordatorio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("paciente", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.PacientePadecimiento", b =>
                {
                    b.Property<int>("IdPacientePadecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPacientePadecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPacientePadecimiento"));

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<int>("IdPadecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    b.HasKey("IdPacientePadecimiento")
                        .HasName("PK__paciente__3AE7E254DC45448E");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdPadecimiento");

                    b.ToTable("paciente_padecimiento", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Padecimiento", b =>
                {
                    b.Property<int>("IdPadecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPadecimiento"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPadecimiento")
                        .HasName("PK__padecimi__D21C343147D1C7AE");

                    b.ToTable("padecimiento", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Calle")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("calle");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("Colonia")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("colonia");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numero");

                    b.Property<string>("PrimerApellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primer_apellido");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("segundo_apellido");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPersona")
                        .HasName("PK__persona__A47881415AC454CC");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Recordatorio", b =>
                {
                    b.Property<int>("IdRecordatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRecordatorio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecordatorio"));

                    b.Property<string>("CantidadMedicamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cantidad_medicamento");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<int>("IdEnfermero")
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    b.Property<string>("Medicamento")
                        .HasColumnType("text")
                        .HasColumnName("medicamento");

                    b.HasKey("IdRecordatorio")
                        .HasName("PK__recordat__D132AA42FED1DCB3");

                    b.HasIndex("IdEnfermero");

                    b.ToTable("recordatorio", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Ritmo", b =>
                {
                    b.Property<int>("IdRitmo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ritmo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRitmo"));

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<int>("IdPadecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    b.Property<int?>("Max")
                        .HasColumnType("int")
                        .HasColumnName("max");

                    b.Property<int?>("Medicion")
                        .HasColumnType("int")
                        .HasColumnName("medicion");

                    b.Property<int?>("Min")
                        .HasColumnType("int")
                        .HasColumnName("min");

                    b.HasKey("IdRitmo")
                        .HasName("PK__ritmo__5D4E3198D31B2151");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdPadecimiento");

                    b.ToTable("ritmo", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasenia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contrasenia");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<string>("Rol")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rol");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuario__645723A64355D1CF");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Back_health.Models.Doctor", b =>
                {
                    b.HasOne("Back_health.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__doctor__idUsuari__5DCAEF64");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Back_health.Models.Enfermero", b =>
                {
                    b.HasOne("Back_health.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Enfermeros")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idPer__3F466844");

                    b.HasOne("Back_health.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Enfermeros")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idUsu__403A8C7D");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Back_health.Models.EnfermeroTurno", b =>
                {
                    b.HasOne("Back_health.Models.Enfermero", "IdEnfermeroNavigation")
                        .WithMany("EnfermeroTurnos")
                        .HasForeignKey("IdEnfermero")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idTur__4F7CD00D");

                    b.HasOne("Back_health.Models.HistorialTurno", "IdTurnoNavigation")
                        .WithMany("EnfermeroTurnos")
                        .HasForeignKey("IdTurno")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idTur__5070F446");

                    b.Navigation("IdEnfermeroNavigation");

                    b.Navigation("IdTurnoNavigation");
                });

            modelBuilder.Entity("Back_health.Models.HistorialTurno", b =>
                {
                    b.HasOne("Back_health.Models.Enfermero", "IdEnfermeroNavigation")
                        .WithMany("HistorialTurnos")
                        .HasForeignKey("IdEnfermero")
                        .IsRequired()
                        .HasConstraintName("FK__historial__idEnf__4BAC3F29");

                    b.HasOne("Back_health.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("HistorialTurnos")
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("FK__historial__idPac__4CA06362");

                    b.Navigation("IdEnfermeroNavigation");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("Back_health.Models.MonitoreoSalud", b =>
                {
                    b.HasOne("Back_health.Models.Padecimiento", "IdPadecimientoNavigation")
                        .WithMany("MonitoreoSaluds")
                        .HasForeignKey("IdPadecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__monitoreo__idPad__571DF1D5");

                    b.Navigation("IdPadecimientoNavigation");
                });

            modelBuilder.Entity("Back_health.Models.Paciente", b =>
                {
                    b.HasOne("Back_health.Models.Alertum", "IdAlertaNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdAlerta")
                        .HasConstraintName("FK__paciente__idAler__46E78A0C");

                    b.HasOne("Back_health.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__paciente__idUsua__45F365D3");

                    b.HasOne("Back_health.Models.Recordatorio", "IdRecordatorioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdRecordatorio")
                        .HasConstraintName("FK__paciente__idReco__47DBAE45");

                    b.HasOne("Back_health.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__paciente__idUsua__48CFD27E");

                    b.Navigation("IdAlertaNavigation");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdRecordatorioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Back_health.Models.PacientePadecimiento", b =>
                {
                    b.HasOne("Back_health.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("PacientePadecimientos")
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("FK__paciente___idPac__59FA5E80");

                    b.HasOne("Back_health.Models.Padecimiento", "IdPadecimientoNavigation")
                        .WithMany("PacientePadecimientos")
                        .HasForeignKey("IdPadecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__paciente___idPad__5AEE82B9");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdPadecimientoNavigation");
                });

            modelBuilder.Entity("Back_health.Models.Recordatorio", b =>
                {
                    b.HasOne("Back_health.Models.Enfermero", "IdEnfermeroNavigation")
                        .WithMany("Recordatorios")
                        .HasForeignKey("IdEnfermero")
                        .IsRequired()
                        .HasConstraintName("FK__recordato__idEnf__4316F928");

                    b.Navigation("IdEnfermeroNavigation");
                });

            modelBuilder.Entity("Back_health.Models.Ritmo", b =>
                {
                    b.HasOne("Back_health.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Ritmos")
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("FK__ritmo__idPacient__534D60F1");

                    b.HasOne("Back_health.Models.Padecimiento", "IdPadecimientoNavigation")
                        .WithMany("Ritmos")
                        .HasForeignKey("IdPadecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__ritmo__idPadecim__5441852A");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdPadecimientoNavigation");
                });

            modelBuilder.Entity("Back_health.Models.Alertum", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("Back_health.Models.Enfermero", b =>
                {
                    b.Navigation("EnfermeroTurnos");

                    b.Navigation("HistorialTurnos");

                    b.Navigation("Recordatorios");
                });

            modelBuilder.Entity("Back_health.Models.HistorialTurno", b =>
                {
                    b.Navigation("EnfermeroTurnos");
                });

            modelBuilder.Entity("Back_health.Models.Paciente", b =>
                {
                    b.Navigation("HistorialTurnos");

                    b.Navigation("PacientePadecimientos");

                    b.Navigation("Ritmos");
                });

            modelBuilder.Entity("Back_health.Models.Padecimiento", b =>
                {
                    b.Navigation("MonitoreoSaluds");

                    b.Navigation("PacientePadecimientos");

                    b.Navigation("Ritmos");
                });

            modelBuilder.Entity("Back_health.Models.Persona", b =>
                {
                    b.Navigation("Enfermeros");

                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("Back_health.Models.Recordatorio", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("Back_health.Models.Usuario", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Enfermeros");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
